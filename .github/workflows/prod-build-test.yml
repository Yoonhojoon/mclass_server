name: Express Build & Test CI

on:
  pull_request:
    branches: [main, develop]
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-22.04

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: mclass
          POSTGRES_DB: mclass_test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      redis:
        image: redis:7.0
        ports:
          - 6379:6379

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma Client
        run: npx prisma generate
        
      - name: Create .env file
        run: |
          echo "${{ secrets.ENV_TEST }}" > .env
          echo "DATABASE_URL=postgresql://postgres:mclass@localhost:5432/mclass_test_db" >> .env
          echo "TEST_DATABASE_URL=postgresql://postgres:mclass@localhost:5432/mclass_test_db" >> .env
          echo "REDIS_URL=redis://localhost:6379/1" >> .env
          echo "NODE_ENV=test" >> .env

      - name: Run database migrations
        run: npx prisma migrate deploy

      - name: Run tests
        run: npm test

  build:
    runs-on: ubuntu-22.04

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: mclass
          POSTGRES_DB: mclass_test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      redis:
        image: redis:7.0
        ports:
          - 6379:6379

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Create .env
        run: echo "${{ secrets.ENV_PROD }}" > .env

      - name: Build
        run: npm run build
