name: Express Build & Test CI

on:
  pull_request:
    branches: [main, develop]
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-22.04

    services:
      redis:
        image: redis:7.0
        ports:
          - 6379:6379

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma Client for test
        run: npx prisma generate --schema=./prisma/schema.test.prisma
        
      - name: Create .env file
        run: |
          cat > .env << EOF
          NODE_ENV=test
          DATABASE_URL=file:./test.db
          TEST_DATABASE_URL=file:./test.db
          REDIS_URL=redis://localhost:6379/1
          JWT_SECRET=test-jwt-secret-key-for-testing-only
          JWT_REFRESH_SECRET=test-jwt-refresh-secret-key-for-testing-only
          EMAIL_HOST=localhost
          EMAIL_PORT=1025
          EMAIL_USER=dummy
          EMAIL_PASS=dummy
          EMAIL_FROM=test@example.com
          LOG_LEVEL=error
          EOF

      - name: Run database migrations
        run: npx prisma migrate deploy --schema=./prisma/schema.test.prisma
        env:
          DATABASE_URL: file:./test.db

      - name: Run tests
        run: npm test
        env:
          NODE_ENV: test
          DATABASE_URL: file:./test.db
          TEST_DATABASE_URL: file:./test.db
          REDIS_URL: redis://localhost:6379/1

      - name: Cleanup test database
        run: rm -f test.db
        if: always()

  build:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Create .env
        run: echo "${{ secrets.ENV_PROD }}" > .env

      - name: Build
        run: npm run build
